### Code so far is a copy of the backend main.yaml file
### And falls in both the build and deploy stages
### NEED TO AUTOMATICALLY UPDATE THE S3 BUCKET IN THIS FILE WHEN SITE CODE IS CHANGED
### ALSO NEED TO INVALIDATE OR CLEAR CLOUDFRONT CACHE

name: Deploy Infrastructure and Website

on:
  push:
    branches:
      - main
    paths:
      - 'infra/**'
      - 'src/**'

jobs:
  build:
    name: Checkout and Setup
    runs-on: ubuntu-latest
    outputs:
      tf-dir: ${{ steps.set-output.outputs.tf-dir }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set Terraform directory
        id: set-output
        run: echo "tf-dir=infra" >> $GITHUB_OUTPUT

  deploy:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  test:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get Website URL
        run: export WEBSITE_URL=$(terraform output -raw cloudfront_distro_domain_name)
        working-directory: ./infra

      - name: Run Tests
        run: npx playwright test
        working-directory: ./tests

  upload:
    name: Upload Website to S3
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Get S3 bucket name from Terraform output
        id: tf-output
        working-directory: infra
        run: |
          bucket_name=$(terraform output -raw website_bucket_name)
          echo "BUCKET_NAME=$bucket_name" >> $GITHUB_ENV

      - name: Sync website files to S3
        run: |
          aws s3 sync ./src s3://$BUCKET_NAME --delete --acl public-read