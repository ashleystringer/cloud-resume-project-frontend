### Code so far is a copy of the backend main.yaml file
### And falls in both the build and deploy stages
### NEED TO AUTOMATICALLY UPDATE THE S3 BUCKET IN THIS FILE WHEN SITE CODE IS CHANGED
### ALSO NEED TO INVALIDATE OR CLEAR CLOUDFRONT CACHE

name: Deploy Infrastructure and Website

on: [push]

jobs:
  build:
    name: Checkout and Setup
    runs-on: ubuntu-latest
    outputs:
      tf-dir: ${{ steps.set-output.outputs.tf-dir }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set Terraform directory
        id: set-output
        run: echo "tf-dir=infra" >> $GITHUB_OUTPUT

  test-deploy:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: build
    outputs:
      bucket-name: ${{ steps.get-bucket-name.outputs.bucket-name }}
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: npm install
        run: npm install
        working-directory: ./

      - name: Install browsers
        run: npx playwright install
  
      - name: Get Website URL
        run: |
          website_url=$(terraform output -raw cloudfront_distro_domain_name)
          echo "WEBSITE_URL=$website_url" >> $GITHUB_ENV
        working-directory: ./infra

      - name: Set bucket name output
        id: get-bucket-name
        working-directory: ./infra
        run: |
          bucket_name=$(terraform output -raw s3_bucket_name)
          echo "bucket-name=$bucket_name" >> $GITHUB_OUTPUT

      - name: Run Tests
        run: |
          export WEBSITE_URL=$WEBSITE_URL
          npx playwright test
        working-directory: ./tests

  upload:
    name: Upload Website to S3
    runs-on: ubuntu-latest
    needs: test-deploy
    steps:
      - name: Set bucket name
        run: echo "bucket_name=${{ needs.test-deploy.outputs.bucket-name }}" >> $GITHUB_ENV
      
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Sync website files to S3
        run: |
          aws s3 sync ./src s3://$bucket_name --delete --acl public-read